<?xml version="1.0" encoding="utf-8" ?>
<project name="DEPElections" default="deploy" basedir=".">
	<property environment="env" />
	<property file="build.properties" />
	<property name="wildfly.args" value="--server-config=standalone-full.xml" />

	<!-- wildfly dirs -->
	<property name="wildfly.bin.dir" value="${wildfly.home}/bin" />
	<property name="wildfly.conf.dir" value="${wildfly.home}/bin" />
	<property name="wildfly.standalone.configuration.dir" value="${wildfly.home}/standalone/configuration" />
	<property name="wildfly.standalone.deployments.dir" value="${wildfly.home}/standalone/deployments" />
	<property name="wildfly.modules.dir" value="${wildfly.home}/modules" />

	<!-- Application server specific configuration -->
	<property name="wildfly-spec.dir" value="${basedir}/wildfly" />
	<property name="wildfly-spec.conf.dir" value="${wildfly-spec.dir}/bin" />
	<property name="wildfly-spec.modules.dir" value="${wildfly-spec.dir}/modules" />
	<property name="wildfly-spec.standalone.configuration.dir" value="${wildfly-spec.dir}/standalone/configuration" />
	<property name="wildfly-spec.standalone.deployments.dir" value="${wildfly-spec.dir}/standalone/deployments" />

	<!-- Build dirs -->
	<property name="src.dir" value="${basedir}/src" />
	<property name="build.dir" value="${basedir}/out/production/dep-election" />
	<property name="dist.ear" value="${ant.project.name}.ear" />

	<property name="ear.dir" value="${basedir}/ear" />
	<property name="ear.lib.dir" value="${ear.dir}/lib" />

	<property name="rest.dist.war" value="rest.war" />
	<property name="rest.war.dir" value="${basedir}/rest.war" />
	<property name="rest.war.lib.dir" value="${rest.war.dir}/WEB-INF/lib" />

	<property name="www.dir" value="${basedir}/dep-ui/www" />
	<property name="www.dist.war" value="depui.war" />

	<!-- Classpath -->
	<path id="project.class.path">
		<pathelement path="${build.dir}" />
		<!-- Include everything and get it over with! -->
		<fileset dir="${wildfly.modules.dir}" includes="**/*.jar" />
		<fileset dir="${ear.lib.dir}" includes="**/*.jar" />
	</path>

	<path id="requirejs.class.path">
		<fileset dir="${basedir}/dep-ui/rjs" includes="**/*.jar" />
	</path>

	<target name="install" description="Installs the configuration files of the application server">
		<!--Install the app configuration-->
		<copy todir="${wildfly.bin.dir}" overwrite="true" failonerror="false">
			<fileset dir="${wildfly-spec.conf.dir}" />
		</copy>
		<copy todir="${wildfly.standalone.configuration.dir}" overwrite="true" failonerror="false">
			<fileset dir="${wildfly-spec.standalone.configuration.dir}" />
		</copy>
		<copy todir="${wildfly.standalone.deployments.dir}" overwrite="true" failonerror="false">
			<fileset dir="${wildfly-spec.standalone.deployments.dir}" />
		</copy>
	</target>

	<target name="compile" description="Compile src to bin">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" debuglevel="lines,vars,source" encoding="UTF-8">
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="optimizejs" description="Optimize js files">
		<java classname="org.mozilla.javascript.tools.shell.Main" fork="yes">
			<arg value="${basedir}/dep-ui/rjs/r.js" />
			<arg value="-o" />
			<arg value="${basedir}/dep-ui/app.build.js" />
			<classpath refid="requirejs.class.path" />
		</java>
		<native2ascii encoding="UTF-8" src="${www.dir}" dest="${build.dir}/www" includes="**/*.properties"/>
	</target>

	<target name="package-ejb" description="Package up the EJB classes">
		<jar destfile="${build.dir}/ejbs.jar">
			<metainf dir="${src.dir}/META-INF" />
			<zipfileset dir="${build.dir}">
				<include name="**/service/**" />
			</zipfileset>
			<zipfileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.png" />
				<include name="**/*.jpg" />
			</zipfileset>
		</jar>
	</target>


	<target name="package-warRest" depends="compile" description="Package up the REST web part as a war">
		<jar destfile="${build.dir}/${rest.dist.war}">
			<zipfileset dir="${rest.war.dir}" />
			<zipfileset dir="${build.dir}" prefix="WEB-INF/classes">
				<include name="**/server/**" />
			</zipfileset>
		</jar>
	</target>


	<target name="package-ear" depends="package-warRest, package-ejb" description="Package up the project as an ear">
		<jar destfile="${build.dir}/${dist.ear}" manifest="${ear.dir}/META-INF/MANIFEST.MF">
			<metainf dir="${ear.dir}/META-INF" />
			<zipfileset dir="${ear.dir}">
				<exclude name="META-INF/**" />
			</zipfileset>
			<zipfileset dir="${build.dir}">
				<include name="ejbs.jar" />
				<include name="${rest.dist.war}" />
			</zipfileset>
		</jar>
	</target>

	<target name="deploy" description="Deploy the project to the server">
		<antcall target="deploy-ear" />
		<antcall target="deploy-www" />
	</target>

	<target name="deploy-ear" description="Deploy the project to the server">
		<antcall target="package-ear" />
		<copy todir="${wildfly.standalone.deployments.dir}/../" file="${build.dir}/${dist.ear}" />
		<move todir="${wildfly.standalone.deployments.dir}" file="${wildfly.standalone.deployments.dir}/../${dist.ear}" />
	</target>

	<target name="deploy-www" description="Deploy the www files to the server">
		<sync todir="${build.dir}/www">
			<fileset dir="${www.dir}" excludes="**/*.properties"/>
		</sync>
		<native2ascii encoding="UTF-8" src="${www.dir}" dest="${build.dir}/www" includes="**/*.properties"/>
		<sync todir="${wildfly.standalone.deployments.dir}/${www.dist.war}">
			<fileset dir="${build.dir}/www">
		</fileset>
		</sync>
		<touch file="${wildfly.standalone.deployments.dir}/depui.war.dodeploy" />
	</target>

	<target name="redeploy-ear" depends="package-ear" description="Redeploy the project to the server">
		<copy todir="${wildfly.standalone.deployments.dir}" file="${build.dir}/${dist.ear}" overwrite="yes" />
	</target>

	<target name="undeploy-ear" description="Undeploy the project from the server">
		<delete file="${wildfly.standalone.deployments.dir}/${dist.ear}" />
	</target>

	<target name="undeploy-www" description="Undeploy the client from the server">
		<delete dir="${wildfly.standalone.deployments.dir}/${www.dist.war}" />
		<delete file="${wildfly.standalone.deployments.dir}/${www.dist.war}.deployed" />
	</target>

	<target name="release">
		<antcall target="clean" />
		<antcall target="release-ear" />
		<antcall target="release-www" />
	</target>

	<target name="release-ear">
		<property name="draftCompile" value="" />
		<antcall target="deploy-ear" />
	</target>

	<target name="release-www" depends="optimizejs">
		<sync todir="${wildfly.standalone.deployments.dir}/${www.dist.war}">
			<fileset dir="${build.dir}/www">
				<exclude name="**/tpl/*" />
			</fileset>
		</sync>
		<touch file="${wildfly.standalone.deployments.dir}/depui.war.dodeploy" />
	</target>

	<target name="clean" description="Delete the contents of the bin and www directories">
		<delete dir="${build.dir}" />
	</target>

	<!-- Documentation Generator -->

	<path id="enunciate.classpath">
		<path refid="project.class.path" />
		<fileset dir="${enunciate.home}/lib">
			<include name="*.jar" />
			<exclude name="enunciate-jaxws-ri-1.27.jar" />
			<exclude name="enunciate-jersey-1.27.jar" />
			<exclude name="enunciate-jersey-rt.1.27.jar" />
			<exclude name="enunciate-c-1.27.jar" />
			<exclude name="enunciate-csharp-1.27.jar" />
		</fileset>
		<fileset dir="${enunciate.home}/lib/modules/jboss">
			<include name="*.jar" />
		</fileset>
	</path>


	<taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
		<classpath refid="enunciate.classpath" />
	</taskdef>

	<pathconvert property="enunciate.classpathProp" refid="enunciate.classpath" />
	<target name="doc">
		<delete file="${build.dir}/docs.zip" />
		<delete dir="${build.dir}/docs/" />
		<enunciate basedir="${src.dir}">
			<include name="**/*.java" />
			<classpath refid="enunciate.classpath" />
			<export artifactId="docs" destination="${build.dir}/docs.zip">
			</export>
			<javacArgument argument="-g" />
		</enunciate>
		<unzip src="${build.dir}/docs.zip" dest="${build.dir}/docs/"></unzip>
	</target>

</project>
